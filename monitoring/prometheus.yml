# Prometheus Configuration for Ocean Shopping Center
global:
  scrape_interval: 15s
  evaluation_interval: 15s

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Load rules once and periodically evaluate them
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Spring Boot Application - Backend
  - job_name: 'ocean-backend'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 10s
    static_configs:
      - targets: ['backend:8080']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: backend:8080

  # PostgreSQL Database Metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Redis Metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-master:6379']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Nginx Metrics (if nginx-prometheus-exporter is configured)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-proxy:9113']
    scrape_interval: 15s

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # Application Custom Metrics
  - job_name: 'ocean-app-metrics'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['backend:8080']
    metric_relabel_configs:
      # Keep only application-specific metrics
      - source_labels: [__name__]
        regex: 'ocean_.*|http_requests_.*|jvm_.*|system_.*|process_.*'
        action: keep
      
      # Add environment labels
      - target_label: environment
        replacement: 'production'
      - target_label: application
        replacement: 'ocean-shopping-center'

  # Database Connection Pool Metrics
  - job_name: 'hikaricp'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 15s
    static_configs:
      - targets: ['backend:8080']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'hikaricp_.*'
        action: keep

  # Payment Processing Metrics
  - job_name: 'payment-metrics'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 10s
    static_configs:
      - targets: ['backend:8080']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'payment_.*|stripe_.*|order_.*|cart_.*'
        action: keep

  # WebSocket Connection Metrics
  - job_name: 'websocket-metrics'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 10s
    static_configs:
      - targets: ['backend:8080']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'websocket_.*|stomp_.*|session_.*'
        action: keep

# Remote write configuration for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"